'''
Розробити функцію saddle_point(matrix),
яка приймає 1 аргумент -- прямокутну матрицю цілих чисел, задану у вигляді списка списків,
та повертає тьюпл із координатами "сідлової точки" переданої матриці або логічну константу False, якщо такої точки не існує.

Сідловою точкою вважається такий елемент матриці, який є мінімальним (строго менше за інші) у своєму рядку та 
максимальним (строго більше за інші) у своєму стовпці, наприклад:
матриця:
1 2 3
0 2 1
"1" в лівому верхньому кутку (за координатами (0;0)) є сідловою точкою матриці.

Вважати, що передані дані є коректними, тобто матриця не містить інших значень крім цілих чисел, 
а всі вкладені списки мають однакову довжину. Результуючий тьюпл містить два числа -- порядкові номери сідлової точки 
в рядку (індекс його списка у зовнішньому списку) та в стовпці (індекс у внутрішньому списку).
'''

def saddle_point(matrix):
    #output matrix
    for i in range(len(matrix)):
        row = ''
        for j in range(len(matrix[i])):
            row = row + str(matrix[i][j]) + '\t'
        print (row,'\t')
    
    for i in range(len(matrix)):
        list_y = []
        if matrix[i].count(min(matrix[i])) == 1:
            el_min = min(matrix[i])
            x_min = i
            y_min = matrix[i].index(el_min)
            
            for n in range(len(matrix)):
                list_y.append(matrix[n][y_min])
           
            if list_y.count(max(list_y)) == 1:
                el_max = max(list_y)
                if el_min == el_max:
                    return (x_min,y_min)
    return (False)

#print (saddle_point([[1,2,3],[3,2,1]]))
#print (saddle_point([[8,3,0,1,2,3,4,8,1,2,3],[3,2,1,2,3,9,4,7,9,2,3],[7,6,0,1,3,5,2,3,4,1,1]]))
print (saddle_point([[21]]))


